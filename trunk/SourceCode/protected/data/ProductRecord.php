<?php
/**
 * Auto generated by prado-cli.php on 2009-12-09 09:30:08.
 */
class ProductRecord extends TActiveRecord
{
	const TABLE='tbl_product';

	public $ID;
	public $MfID;
	public $BrandID;
	public $DiscountID;
	public $Alias;
	public $SKU;
	public $Name;
	public $Brief;
	public $Description;
	public $ImagePath;
	public $ThumbnailPath;
	public $Price;
	public $RewardPoints;
	public $IsBestSeller;
	public $IsHotDeal;
	public $IsNewArrival;
	public $IsPublished;
	public $Ordering;
	public $InStock;
	public $UOM;
	public $AvailableDate;
	public $CreateDate;
	public $ModifyDate;
	
	public static $COLUMN_MAPPING=array
	(
		'product_id'=>'ID',
		'mf_id'=>'MfID',
		'brand_id'=>'BrandID',
		'discount_id'=>'DiscountID',
		'product_sku'=>'SKU',
		'product_alias'=>'Alias',
		'product_name'=>'Name',
		'product_brief'=>'Brief',
		'product_desc'=>'Description',
		'product_image'=>'ImagePath',
		'product_thumb'=>'ThumbnailPath',
		'product_price'=>'Price',
		'product_reward_points'=>'RewardPoints',
		'product_best_seller'=>'IsBestSeller',
		'product_hot_deal'=>'IsHotDeal',
		'product_new_arrival'=>'IsNewArrival',
		'product_publish'=>'IsPublished',
		'product_order'=>'Ordering',
		'product_in_stock'=>'InStock',
		'product_uom'=>'UOM',
		'product_available_date'=>'AvailableDate',
		'c_date'=>'CreateDate',
		'm_date'=>'ModifyDate'
	);
	
	public static $RELATIONS=array
	(
		'Brand'=>array(self::BELONGS_TO,'BrandRecord','brand_id'),
		'Manufacturer'=>array(self::BELONGS_TO,'ManufacturerRecord','mf_id'),
		'Discount'=>array(self::BELONGS_TO,'DiscountRecord','discount_id'),
		'Categories'=>array(self::MANY_TO_MANY,'CategoryRecord','tbl_product_cat_xref')
	);

	public static function finder($className=__CLASS__)
	{
		return parent::finder($className);
	}
	
	protected function getCategoryIDs()
	{
		if (self::finder()->withCategories()->findByPk($this->ID) instanceof ProductRecord)
		{
			$categories = self::finder()->withCategories()->findByPk($this->ID)->Categories;
			if (count($categories>0))
			{
				$id = array();
				foreach($categories as $cat)
				{
					$id[] = $cat->ID;
				}
				return $id;
			}
		}
		return null;
	}
	
	protected function getCategoryNames()
	{
		if (self::finder()->withCategories()->findByPk($this->ID) instanceof ProductRecord)
		{
			$categories = self::finder()->withCategories()->findByPk($this->ID)->Categories;
			if (count($categories>0))
			{
				$name = "";
				for($i=0;$i<count($categories);$i++)
				{
					$name = ($i==0?"":", ").$categories[$i]->Name;
				}
				return $name;
			}
		}
		return null;
	}
	
	public function save()
	{
		if ($this->ID <= 0)
		{
			$this->Ordering = count(self::finder()->findAll())+1;
			$this->CreateDate = time();
		}
		$this->Alias = String::removeAccents(strlen($this->Alias) > 0 ? $this->Alias : $this->Name);
		$this->ModifyDate = time();
		$this->RewardPoints = 0;
		$this->AvailableDate = 0;
		parent::save();
	}
}
?>